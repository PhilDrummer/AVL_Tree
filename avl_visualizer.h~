/* Basic AVL-Tree implementation - Visualization module */ 
/*
 * Author: Philipp Schaad
 * Creation Date: 151015
 *
 * Description:
 * This is the visualizer module of the AVL-Tree implementation.
 * This module provides:
 *     - Visualization of the AVL-Tree.
 *
 * Exit Code Index:
 *     > 0:  Successful Execution.
 */

#ifndef __AVL_VISUALIZER_H_
#define __AVL_VISUALIZER_H_

/*
 * Function: visualize
 * -------------------
 * Description:
 * Visualize a binary search tree by printing it
 * to the console in layers representing each in-
 * dividual height-layer of the tree.
 * 
 * Arguments: tree - The avl tree to visualize.
 *
 * Returns: void
 */
extern void visualize(AvlTree *tree);

/*
 * Function: assemble_node_list
 * ----------------------------
 * Description:
 * Build an array containing all the nodes of the avl
 * tree. (Recursively)
 * 
 * Arguments: node - currently active node in recursion.
 *            list - the list to fill. 
 *            t_index - index of the current node in the tree.
 * 
 * Returns: void
 */
extern void assemble_node_list(Node *node, int *list, int t_index);

#endif /* __AVL_VISUALIZER_H_ */
